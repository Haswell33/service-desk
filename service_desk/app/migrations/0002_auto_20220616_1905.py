# Generated by Django 3.2.9 on 2022-06-16 17:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AttachmentAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'attachment_association',
            },
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('env_type', models.CharField(blank=True, choices=[('service-desk', 'Service Desk'), ('software', 'Software')], max_length=50, null=True, verbose_name='Environment type')),
            ],
            options={
                'verbose_name': 'board',
                'verbose_name_plural': 'boards',
                'db_table': 'board',
            },
        ),
        migrations.CreateModel(
            name='BoardColumn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column_title', models.CharField(max_length=255)),
                ('column_number', models.IntegerField(default=1)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.board')),
            ],
            options={
                'verbose_name': 'board column',
                'verbose_name_plural': 'board columns',
                'db_table': 'board_column',
                'ordering': ['column_number'],
            },
        ),
        migrations.CreateModel(
            name='BoardColumnAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('column', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boardcolumnassociation_column_nr', to='app.boardcolumn')),
            ],
            options={
                'verbose_name': 'board column association',
                'verbose_name_plural': 'board column associations',
                'db_table': 'board_column_association',
                'ordering': ['column'],
            },
        ),
        migrations.CreateModel(
            name='IssueType',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('env_type', models.CharField(choices=[('service-desk', 'Service Desk'), ('software', 'Software')], max_length=50, null=True, verbose_name='Environment type')),
                ('description', models.TextField(blank=True, null=True)),
                ('icon', models.ImageField(blank=True, max_length=500, upload_to='D:\\Programs\\Repository\\Python\\GitHub\\service-desk_today\\service_desk/media/img/issue_type', validators=[django.core.validators.FileExtensionValidator])),
            ],
            options={
                'verbose_name': 'issue type',
                'verbose_name_plural': 'issue types',
                'db_table': 'issue_type',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='LabelAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'label_association',
            },
        ),
        migrations.CreateModel(
            name='TenantSession',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=False, editable=False)),
                ('user_type', models.CharField(choices=[('customer', 'Customer'), ('operator', 'Operator'), ('developer', 'Developer')], max_length=25)),
            ],
            options={
                'verbose_name': 'tenant session',
                'verbose_name_plural': 'tenant sessions',
                'db_table': 'tenant_session',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Transition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55)),
            ],
            options={
                'verbose_name': 'transition',
                'verbose_name_plural': 'transitions',
                'db_table': 'transition',
                'ordering': ['src_status'],
            },
        ),
        migrations.CreateModel(
            name='TransitionAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transitionassociation_issue_type', to='app.issuetype')),
                ('transition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transitionassociation_transition', to='app.transition')),
            ],
            options={
                'verbose_name': 'transition association',
                'verbose_name_plural': 'transition associations',
                'db_table': 'transition_association',
                'ordering': ['transition'],
                'unique_together': {('issue_type', 'transition')},
            },
        ),
        migrations.RenameModel(
            old_name='SLA',
            new_name='SLAScheme',
        ),
        migrations.AlterModelOptions(
            name='attachment',
            options={'ordering': ['id'], 'verbose_name': 'attachment', 'verbose_name_plural': 'attachments'},
        ),
        migrations.AlterModelOptions(
            name='comment',
            options={'ordering': ['id'], 'verbose_name': 'comment', 'verbose_name_plural': 'comments'},
        ),
        migrations.AlterModelOptions(
            name='issue',
            options={'verbose_name': 'issue', 'verbose_name_plural': 'issues'},
        ),
        migrations.AlterModelOptions(
            name='issueassociation',
            options={'verbose_name': 'link', 'verbose_name_plural': 'links'},
        ),
        migrations.AlterModelOptions(
            name='label',
            options={'ordering': ['id'], 'verbose_name': 'label', 'verbose_name_plural': 'labels'},
        ),
        migrations.AlterModelOptions(
            name='priority',
            options={'ordering': ['-step'], 'verbose_name': 'priority', 'verbose_name_plural': 'priorities'},
        ),
        migrations.AlterModelOptions(
            name='resolution',
            options={'ordering': ['id'], 'verbose_name': 'resolution', 'verbose_name_plural': 'resolutions'},
        ),
        migrations.AlterModelOptions(
            name='slascheme',
            options={'ordering': ['id'], 'verbose_name': 'SLA scheme', 'verbose_name_plural': 'SLA schemes'},
        ),
        migrations.AlterModelOptions(
            name='status',
            options={'ordering': ['name'], 'verbose_name': 'status', 'verbose_name_plural': 'statuses'},
        ),
        migrations.AlterModelOptions(
            name='tenant',
            options={'ordering': ['id'], 'permissions': [('view_customer_space', 'Manage tenant as customer'), ('view_operator_space', 'Manage tenant as operator'), ('view_developer_space', 'Manage tenant as developer')], 'verbose_name': 'tenant', 'verbose_name_plural': 'tenants'},
        ),
        migrations.RemoveField(
            model_name='issue',
            name='association',
        ),
        migrations.RemoveField(
            model_name='issue',
            name='label',
        ),
        migrations.RemoveField(
            model_name='issueassociation',
            name='type',
        ),
        migrations.RemoveField(
            model_name='status',
            name='type',
        ),
        migrations.RemoveField(
            model_name='tenant',
            name='workflow_developer',
        ),
        migrations.RemoveField(
            model_name='tenant',
            name='workflow_operator',
        ),
        migrations.AddField(
            model_name='issue',
            name='associations',
            field=models.ManyToManyField(related_name='_app_issue_associations_+', through='app.IssueAssociation', to='app.Issue'),
        ),
        migrations.AddField(
            model_name='issue',
            name='slug',
            field=models.SlugField(blank=True, max_length=55),
        ),
        migrations.AddField(
            model_name='priority',
            name='step',
            field=models.IntegerField(default=2),
        ),
        migrations.AddField(
            model_name='status',
            name='resolution',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='status_resolution', to='app.resolution'),
        ),
        migrations.AlterField(
            model_name='attachment',
            name='file',
            field=models.FileField(blank=True, null=True, upload_to='D:\\Programs\\Repository\\Python\\GitHub\\service-desk_today\\service_desk/media/attachments', validators=[django.core.validators.FileExtensionValidator]),
        ),
        migrations.AlterField(
            model_name='comment',
            name='created',
            field=models.DateTimeField(blank=True, help_text='Date when comment created', verbose_name='Created'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='updated',
            field=models.DateTimeField(blank=True, help_text='Date when comment has been recently changed', null=True, verbose_name='Updated'),
        ),
        migrations.RemoveField(
            model_name='issue',
            name='attachments',
        ),
        migrations.AlterField(
            model_name='issue',
            name='comments',
            field=models.ManyToManyField(blank=True, through='app.CommentAssociation', to='app.Comment'),
        ),
        migrations.AlterField(
            model_name='issue',
            name='created',
            field=models.DateTimeField(editable=False, help_text='Date when issue has been created'),
        ),
        migrations.AlterField(
            model_name='issue',
            name='description',
            field=tinymce.models.HTMLField(blank=True, help_text='Describe the issue', null=True, verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='issue',
            name='escalated',
            field=models.BooleanField(default=False, editable=False),
        ),
        migrations.AlterField(
            model_name='issue',
            name='key',
            field=models.CharField(editable=False, max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='issue',
            name='priority',
            field=models.ForeignKey(default=3, on_delete=django.db.models.deletion.CASCADE, related_name='issue_priority', to='app.priority'),
        ),
        migrations.AlterField(
            model_name='issue',
            name='status',
            field=models.ForeignKey(blank=True, default=15, on_delete=django.db.models.deletion.CASCADE, related_name='issue_status', to='app.status'),
        ),
        migrations.AlterField(
            model_name='issue',
            name='updated',
            field=models.DateTimeField(blank=True, editable=False, help_text='Date when issue has been recently changed', null=True),
        ),
        migrations.AlterField(
            model_name='label',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='priority',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='priority',
            name='icon',
            field=models.ImageField(blank=True, max_length=500, upload_to='D:\\Programs\\Repository\\Python\\GitHub\\service-desk_today\\service_desk/media/img/priority', validators=[django.core.validators.FileExtensionValidator]),
        ),
        migrations.AlterField(
            model_name='resolution',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='status',
            name='color',
            field=models.CharField(help_text='RGB color in HEX format', max_length=7),
        ),
        migrations.AlterField(
            model_name='status',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='count',
            field=models.PositiveIntegerField(default=0, editable=False, help_text='Number of issues'),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='icon',
            field=models.ImageField(blank=True, max_length=500, upload_to='D:\\Programs\\Repository\\Python\\GitHub\\service-desk_today\\service_desk/media/img/tenant', validators=[django.core.validators.FileExtensionValidator]),
        ),
        migrations.AlterField(
            model_name='tenant',
            name='key',
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.AlterModelTable(
            name='attachment',
            table='attachment',
        ),
        migrations.AlterModelTable(
            name='comment',
            table='comment',
        ),
        migrations.AlterModelTable(
            name='label',
            table='label',
        ),
        migrations.AlterModelTable(
            name='priority',
            table='priority',
        ),
        migrations.AlterModelTable(
            name='resolution',
            table='resolution',
        ),
        migrations.AlterModelTable(
            name='slascheme',
            table='sla_scheme',
        ),
        migrations.AlterModelTable(
            name='status',
            table='status',
        ),
        migrations.DeleteModel(
            name='Workflow',
        ),
        migrations.AddField(
            model_name='transition',
            name='dest_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transition_dest_status', to='app.status'),
        ),
        migrations.AddField(
            model_name='transition',
            name='src_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transition_src_status', to='app.status'),
        ),
        migrations.AddField(
            model_name='tenantsession',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenantsession_tenant', to='app.tenant'),
        ),
        migrations.AddField(
            model_name='tenantsession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenantsession_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='labelassociation',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='labelassociation_issue', to='app.issue'),
        ),
        migrations.AddField(
            model_name='labelassociation',
            name='label',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='labelassociation_label', to='app.label'),
        ),
        migrations.AddField(
            model_name='boardcolumnassociation',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boardcolumnassociation_status', to='app.status'),
        ),
        migrations.AddField(
            model_name='boardcolumn',
            name='statuses',
            field=models.ManyToManyField(through='app.BoardColumnAssociation', to='app.Status'),
        ),
        migrations.AddField(
            model_name='attachmentassociation',
            name='attachment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachmentassociation_attachment', to='app.attachment'),
        ),
        migrations.AddField(
            model_name='attachmentassociation',
            name='issue',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachmentassociation_issue', to='app.issue'),
        ),
        migrations.AddField(
            model_name='issue',
            name='labels',
            field=models.ManyToManyField(blank=True, through='app.LabelAssociation', to='app.Label'),
        ),
        migrations.AddField(
            model_name='status',
            name='transitions',
            field=models.ManyToManyField(related_name='_app_status_transitions_+', through='app.Transition', to='app.Status'),
        ),
        migrations.AddField(
            model_name='tenant',
            name='customers_board',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tenant_customers_board', to='app.board'),
        ),
        migrations.AddField(
            model_name='tenant',
            name='developers_board',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tenant_developers_board', to='app.board'),
        ),
        migrations.AddField(
            model_name='tenant',
            name='operators_board',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='tenant_operators_board', to='app.board'),
        ),
        migrations.AddField(
            model_name='issue',
            name='attachments',
            field=models.ManyToManyField(blank=True, through='app.AttachmentAssociation', to='app.Attachment'),
        ),
        migrations.AlterField(
            model_name='issue',
            name='type',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='issue_type', to='app.issuetype'),
        ),
        migrations.DeleteModel(
            name='Type',
        ),
    ]
